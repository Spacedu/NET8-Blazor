@page "/Category/List"
@attribute [Authorize]
@rendermode InteractiveAuto
@inject ICategoryRepository CategoryRepository
@inject IConfiguration Configuration
@inject ILocalStorageService LocalStorage

<PageTitle>
    Categoria - Lista
</PageTitle>
<div class="card">
    <div class="card-header align-items-center d-flex">
        <h4 class="card-title mb-0 flex-grow-1">Categoria</h4>
        <div class="flex-shrink-0">
            <a href="/Category/Add" class="btn btn-primary btn-sm material-shadow-none">
                <i class="ri-file-list-3-line align-middle"></i> Cadastrar
            </a>
        </div>
    </div><!-- end card header -->

    <div class="card-body pt-0">
        <div class="table-responsive" style="margin-left: -16px; margin-right: -16px;">
            <table class="table table-borderless table-centered align-middle table-nowrap mb-0">
                <thead class="text-muted table-light">
                    <tr>
                        <th scope="col">Descrição</th>
                        <th scope="col">Ação</th>
                    </tr>
                </thead>
                <tbody>
                    @if (Paginated == null)
                    {
                        <tr>
                            <td colspan="4">Carregando...</td>
                        </tr>
                    }
                    else if (Paginated.Items.Count == 0)
                    {
                        <tr>
                            <td colspan="4">Nenhum registro!</td>
                        </tr>
                    }
                    else
                    {
                        @foreach (var item in Paginated.Items)
                        {
                            <tr>
                                <td>
                                    @item.Name
                                </td>
                                <td>
                                    <a href="/Category/Edit/@item.Id" class="btn btn-sm btn-soft-info"><i class="ri-edit-line"></i></a>
                                    <a href="/Category/Detail/@item.Id" class="btn btn-sm btn-soft-danger"><i class="ri-delete-bin-line"></i></a>
                                </td>
                            </tr>
                        }
                    }
                </tbody>
            </table>
        </div>
        <Pagination Paginated="@Paginated" OnPageChanged="@OnPageChanged" />
    </div>
</div>

@code {
    private int PageIndex = 1;
    private int PageSize;
    private Company? Company;

    private PaginatedList<Category>? Paginated;

    protected override void OnInitialized()
    {
        PageSize = Configuration.GetValue<int>("Pagination:PageSize");

    }
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (!firstRender)
            return;

        Company = await LocalStorage.GetItemAsync<Company>(AppConstants.LocalStorageCompany);
        await LoadDataAsync();
        StateHasChanged();
    }

    private async Task OnPageChanged(int pageNumber)
    {
        PageIndex = pageNumber;
        await LoadDataAsync();
    }
    private async Task LoadDataAsync()
    {
        if (Company is not null)
            Paginated = await CategoryRepository.GetAll(Company!.Id, PageIndex, PageSize);
    }
}
